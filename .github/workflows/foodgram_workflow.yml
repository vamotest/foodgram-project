name: foodgram_workflow

on:
  push:
    branches:
      - master
      - f/optimize-ci
  pull_request:
    branches:
      - master

jobs:
  deploy:
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Create SSH key
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > ../private.key
        sudo chmod 600 ../private.key
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.CLOUD_HOST }} > ~/.ssh/known_hosts
      shell: bash
      env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_KEY}}
        SSH_KEY_PATH: ${{ github.workspace }}/../private.key

    - name: Check docker-compose
      run: |
       sudo python3 -m pip install --upgrade pip
       if which docker-compose > /dev/null 2>&1
       then
         sudo pip install docker-compose -U --no-cache-dir
       else
         sudo pip install docker-compose --no-cache-dir
       fi

    - name: Set environment variables
      run: |
        FILE=.env
        if [ -f "$FILE" ]
        then
          echo "$FILE exists and will removed"
          rm $FILE
        else
          echo "$FILE does not exist"
        fi

        echo "Add new $FILE"
        touch $FILE

        echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> $FILE
        echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> $FILE
        echo DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} >> $FILE
        echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> $FILE
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> $FILE
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> $FILE
        echo DB_HOST=${{ secrets.DB_HOST }} >> $FILE
        echo DB_PORT=${{ secrets.DB_PORT }} >> $FILE

    - name: Remote docker-compose down/up using --context
      run: |
       sudo docker context create remote --docker "host=ssh://${{ secrets.CLOUD_USER }}@${{ secrets.CLOUD_HOST }}"
       docker context use remote
       sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest
       docker-compose --context remote down
       docker volume rm foodgram-project_static
       docker-compose --context remote up -d --force-recreate --build
